/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     pimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         5;

deltaT          0.01;         // fixed timestep of 0.01 s

writeControl    timeStep;     // write every N timesteps
writeInterval   5;            // 5 × 0.01 = 0.05 s

purgeWrite      0;

writeFormat     ascii;
writePrecision  6;
writeCompression off;

timeFormat      general;
timePrecision   6;

runTimeModifiable yes;

// fixed timestep → disable automatic adjustment
adjustTimeStep  no;
maxCo           1.0;



functions 
{
    #includeFunc  scalarTransport

    scalar1
    {
        type            scalarTransport;
        libs            ("libsolverFunctionObjects.so");
        enabled         true;
        log             yes;
        nCorr           1;
        D               1e-10;
        phi             "phi";

        writeControl    timeStep;
        writeInterval   5;   // every 0.05 s
    }

    vorticity1
    {
        type            vorticity;
        libs            ("fieldFunctionObjects.so");

        field           U;
        result          vorticityField;
        region          region0;
        enabled         true;
        log             true;

        writeControl    timeStep;
        writeInterval   5;   // every 0.05 s
    }
  
    massfraction
    {
        type            patchAverage;
        functionObjectLibs ("libsimpleFunctionObjects.so");
        verbose         true;
        fields          (s);
        patches         (outlet);
        factor          1.0;

        writeControl    timeStep;
        writeInterval   5;   // every 0.05 s
    }
	
    surfaceFieldValue1
    {
        type            surfaceFieldValue;
        libs            ("fieldFunctionObjects.so");

        fields          (s);
        operation       areaAverage;
        regionType      patch;
        name            outlet;

        writeFields     false;
        region          region0;
        enabled         true;
        log             true;

        writeControl    timeStep;
        writeInterval   5;   // every 0.05 s
    }

    velocity1
    {
        type            patchAverage;
        functionObjectLibs ("libsimpleFunctionObjects.so");
        verbose         true;
        fields          (U);
        patches         (inlet outlet);
        factor          1.0;

        writeControl    timeStep;
        writeInterval   5;   // every 0.05 s
    }
}



// ************************************************************************* //
